// Mocks generated by Mockito 5.4.4 from annotations
// in frontend/test/bloc_test/review_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:frontend/domain/review_model.dart' as _i3;
import 'package:frontend/infrastructure/review/review_repository.dart' as _i4;
import 'package:frontend/infrastructure/review/review_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeReviewService_0 extends _i1.SmartFake implements _i2.ReviewService {
  _FakeReviewService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReview_1 extends _i1.SmartFake implements _i3.Review {
  _FakeReview_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ReviewRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockReviewRepository extends _i1.Mock implements _i4.ReviewRepository {
  MockReviewRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ReviewService get reviewService => (super.noSuchMethod(
        Invocation.getter(#reviewService),
        returnValue: _FakeReviewService_0(
          this,
          Invocation.getter(#reviewService),
        ),
      ) as _i2.ReviewService);

  @override
  _i5.Future<List<_i3.Review>> getReviews(dynamic gameId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviews,
          [gameId],
        ),
        returnValue: _i5.Future<List<_i3.Review>>.value(<_i3.Review>[]),
      ) as _i5.Future<List<_i3.Review>>);

  @override
  _i5.Future<_i3.Review> getReview(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getReview,
          [id],
        ),
        returnValue: _i5.Future<_i3.Review>.value(_FakeReview_1(
          this,
          Invocation.method(
            #getReview,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Review>);

  @override
  _i5.Future<_i3.Review> createReview(
    _i3.Review? review,
    dynamic gameId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createReview,
          [
            review,
            gameId,
          ],
        ),
        returnValue: _i5.Future<_i3.Review>.value(_FakeReview_1(
          this,
          Invocation.method(
            #createReview,
            [
              review,
              gameId,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Review>);

  @override
  _i5.Future<_i3.Review> updateReview(
    String? id,
    _i3.Review? review,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReview,
          [
            id,
            review,
          ],
        ),
        returnValue: _i5.Future<_i3.Review>.value(_FakeReview_1(
          this,
          Invocation.method(
            #updateReview,
            [
              id,
              review,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Review>);

  @override
  _i5.Future<void> deleteReview(
    String? id,
    String? gameId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteReview,
          [
            id,
            gameId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
